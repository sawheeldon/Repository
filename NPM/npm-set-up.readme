-------------SHORTCUT TO ALL------------

    npm init
    npm install --save jquery
    npm install --save-dev chokidar-cli
    npm install --save-dev less
    npm install --save-dev less-plugin-clean-css

    package json

    "scripts": {
    "mkdir": "mkdir -p build",
    "build": "npm run clean && npm run mkdir && npm run build:html && npm run build:css",
    "watch": "npm run watch:html & npm run watch:css",
    "clean": "rm -rf build",
    "build:html": "npm run clean:html && cp index.html build/",
    "watch:html": "npm run build:html && chokidar index.html -c 'npm run build:html'",
    "clean:html": "rm -f build/index.html"
    "build:css": "npm run build:css:unminified && npm run build:css:minified",
    "watch:css": "npm run watch:css:unminified & npm run watch:css:minified",
    "clean:css": "npm run clean:css:unminified && npm run clean:css:minified",
    "build:css:unminified": "npm run clean:css:unminified && lessc --source-map css/index.less build/$npm_package_name.$npm_package_version.css",
    "watch:css:unminified": "npm run build:css:unminified && chokidar 'css/**/*.(css|less)' -c 'npm run build:css:unminified'",
    "clean:css:unminified": "rm -f build/$npm_package_name.$npm_package_version.css build/$npm_package_name.$npm_package_version.css.map",
    "build:css:minified": "npm run clean:css:minified && lessc --clean-css --source-map css/index.less build/$npm_package_name.$npm_package_version.min.css",
    "watch:css:minified": "npm run build:css:minified && chokidar 'css/**/*.(css|less)' -c 'npm run build:css:minified'",
    "clean:css:minified": "rm -f build/$npm_package_name.$npm_package_version.min.css build/$npm_package_name.$npm_package_version.min.css.map"
    },

------------Daily back-up your project Cycle (commit changes and synchronize)-----------
Note: Run the following command inside the repository folder

//prepack the code
1) git add . ;
--> means add all the files in that particular folder to be pre-packed for the commit
2) git commit -m 'Some message for you future self explaining why is this commit important';
--> means commit is happening only on the local machine (no communication with the server possible); -m stand for a message (it is a message to self about the content of that commit; example: changing the header color)

//send it to the server
3) git pull origin master;
--> means download all the code from the server and make sure there are no conflict with your own code
4) git push --set-upstream origin master;
--> means synchronise your own code with the server


All commands on one line shortcut:
git add . ; git commit -m 'REPLACE-ME'; git pull origin master; git push --set-upstream origin master



-------------INDIVIDUAL INSTALLS------------



//START INSTALL COMMAND

    npm init

//INSTALL JQUERY

    npm install --save jquery

        **
        this can now be used in HTML <script src="node_modules/jquery/dist/jquery.js"></script>

//for the json package Here, the mkdir task creates a directory to put your built files in, and the clean task removes the build directory.

    "scripts": {
    "mkdir": "mkdir -p build",
    "build": "npm run clean && npm run mkdir && npm run build:html",
    "clean": "rm -rf build",
    "build:html": "npm run clean:html && cp index.html build/",
    "clean:html": "rm -f build/index.html"
    },


//INSTALL A WATCH TASK - CHOKIDAR

    npm install --save-dev chokidar-cli

        **
        "scripts": {
        "mkdir": "mkdir -p build",
        "build": "npm run clean && npm run mkdir && npm run build:html",
        "watch": "npm run watch:html",
        "clean": "rm -rf build",
        "build:html": "npm run clean:html && cp index.html build/",
        "watch:html": "npm run build:html && chokidar index.html -c 'npm run build:html'",
        "clean:html": "rm -f build/index.html"
        },

//INSTALL LESS

    npm install --save-dev less

        **
        "scripts": {
        "mkdir": "mkdir -p build",
        "build": "npm run clean && npm run mkdir && npm run build:html && npm run build:css",
        "watch": "npm run watch:html & npm run watch:css",
        "clean": "rm -rf build",
        "build:html": "npm run clean:html && cp index.html build/",
        "watch:html": "npm run build:html && chokidar index.html -c 'npm run build:html'",
        "clean:html": "rm -f build/index.html"
        "build:css": "npm run clean:css && lessc --source-map css/index.less build/$npm_package_name.$npm_package_version.css",
        "watch:css": "npm run build:css && chokidar 'css/**/*.less' -c 'npm run build:css'",
        "clean:css": "rm -f build/$npm_package_name.$npm_package_version.css build/$npm_package_name.$npm_package_version.css.map"

        },

INSTALL CLEAN CSS

    npm install --save-dev less-plugin-clean-css

        **
        "scripts": {
        "mkdir": "mkdir -p build",
        "build": "npm run clean && npm run mkdir && npm run build:html && npm run build:css",
        "watch": "npm run watch:html & npm run watch:css",
        "clean": "rm -rf build",
        "build:html": "npm run clean:html && cp index.html build/",
        "watch:html": "npm run build:html && chokidar index.html -c 'npm run build:html'",
        "clean:html": "rm -f build/index.html"
        "build:css": "npm run build:css:unminified && npm run build:css:minified",
        "watch:css": "npm run watch:css:unminified & npm run watch:css:minified",
        "clean:css": "npm run clean:css:unminified && npm run clean:css:minified",
        "build:css:unminified": "npm run clean:css:unminified && lessc --source-map css/index.less build/$npm_package_name.$npm_package_version.css",
        "watch:css:unminified": "npm run build:css:unminified && chokidar 'css/**/*.(css|less)' -c 'npm run build:css:unminified'",
        "clean:css:unminified": "rm -f build/$npm_package_name.$npm_package_version.css build/$npm_package_name.$npm_package_version.css.map",
        "build:css:minified": "npm run clean:css:minified && lessc --clean-css --source-map css/index.less build/$npm_package_name.$npm_package_version.min.css",
        "watch:css:minified": "npm run build:css:minified && chokidar 'css/**/*.(css|less)' -c 'npm run build:css:minified'",
        "clean:css:minified": "rm -f build/$npm_package_name.$npm_package_version.min.css build/$npm_package_name.$npm_package_version.min.css.map"
        },
